% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event-loop.R
\name{run_loop}
\alias{run_loop}
\title{Run the user supplied function as the idle function within the event loop}
\usage{
run_loop(
  user_func,
  width = 7,
  height = 7,
  fps_target = 30,
  show_fps = FALSE,
  double_buffer = TRUE
)
}
\arguments{
\item{user_func}{user function}

\item{width, height}{size of graphics device to open. Default: 7x7 inches}

\item{fps_target}{target frames-per-second.  If rendering speed surpasses
this then slight pauses will be added to each loop to bring this
back to the target rate. Set to NA to run as fast as possible.  Note
that even though the user supplied function might be called at a very
high rate, the actual screen update rate may be much much lower.}

\item{show_fps}{show the fps. default: FALSE}

\item{double_buffer}{use a double buffered device? Default: TRUE.  A
double buffered device is essential if you are updating the display
every frame e.g. a game of SuperMario.   For more static games
e.g Chess, there's no need to double buffer as you are only updating
the game when user events occur (like moving a chess piece).  Double
buffered devices avoid "screen tearing" when rendering, but because
of the way R handles the dev.hold/dev.flush operations, the mouse
will flicker between a normal pointer and a busy pointer.}
}
\value{
This function returns only when the user presses \code{ESC} within
        the window, or some other terminating condition occurs.
}
\description{
Run the user supplied function as the idle function within the event loop
}
